user nginx;
worker_processes auto;
pid /run/nginx.pid;

events {
    worker_connections 1024;
    multi_accept on;
}

http {

    ##
    # Basic Settings
    ##

    sendfile on;
    tcp_nopush on;
    tcp_nodelay on;
    keepalive_timeout 65;
    types_hash_max_size 2048;

    # Hide nginx version information.
    server_tokens off;

    # server_names_hash_bucket_size 64;
    # server_name_in_redirect off;

    include /etc/nginx/mime.types;
    default_type application/octet-stream;

    # config to don't allow the browser to render the page inside an frame or iframe
    # and avoid clickjacking http://en.wikipedia.org/wiki/Clickjacking
    # if you need to allow [i]frames, you can use SAMEORIGIN or even set an uri with ALLOW-FROM uri
    # https://developer.mozilla.org/en-US/docs/HTTP/X-Frame-Options
    add_header X-Frame-Options SAMEORIGIN;

    # when serving user-supplied content, include a X-Content-Type-Options: nosniff header along with the Content-Type: header,
    # to disable content-type sniffing on some browsers.
    # https://www.owasp.org/index.php/List_of_useful_HTTP_headers
    # currently suppoorted in IE > 8 http://blogs.msdn.com/b/ie/archive/2008/09/02/ie8-security-part-vi-beta-2-update.aspx
    # http://msdn.microsoft.com/en-us/library/ie/gg622941(v=vs.85).aspx
    # 'soon' on Firefox https://bugzilla.mozilla.org/show_bug.cgi?id=471020
    add_header X-Content-Type-Options nosniff;

    # This header enables the Cross-site scripting (XSS) filter built into most recent web browsers.
    # It's usually enabled by default anyway, so the role of this header is to re-enable the filter for
    # this particular website if it was disabled by the user.
    # https://www.owasp.org/index.php/List_of_useful_HTTP_headers
    add_header X-XSS-Protection "1; mode=block";

    # with Content Security Policy (CSP) enabled(and a browser that supports it(http://caniuse.com/#feat=contentsecuritypolicy),
    # you can tell the browser that it can only download content from the domains you explicitly allow
    # http://www.html5rocks.com/en/tutorials/security/content-security-policy/
    # https://www.owasp.org/index.php/Content_Security_Policy
    # I need to change our application code so we can increase security by disabling 'unsafe-inline' 'unsafe-eval'
    # directives for css and js(if you have inline css or js, you will need to keep it too).
    # more: http://www.html5rocks.com/en/tutorials/security/content-security-policy/#inline-code-considered-harmful
    # Eugen: "This is a very nice option! But we use much stuff, that will be blocked due this setting..."
    #add_header Content-Security-Policy "default-src 'self'; script-src 'self' 'unsafe-inline' 'unsafe-eval' https://www.googletagmanager.com https://www.google-analytics.com https://ssl.google-analytics.com https://assets.zendesk.com https://connect.facebook.net; img-src 'self' https://ssl.google-analytics.com https://s-static.ak.facebook.com https://assets.zendesk.com; style-src 'self' 'unsafe-inline' https://fonts.googleapis.com https://assets.zendesk.com; font-src 'self' https://fonts.gstatic.com https://themes.googleusercontent.com; frame-src https://assets.zendesk.com https://www.facebook.com https://s-static.ak.facebook.com https://tautt.zendesk.com; object-src 'none'";

    ##
    # buffer settings
    ##
    fastcgi_buffers 16 16k;
    fastcgi_buffer_size 32k;

    client_body_buffer_size 10K;
    client_header_buffer_size 1k;
    client_max_body_size 10m;
    large_client_header_buffers 4 8k;

    ##
    # Logging Settings
    ##

    log_format  main  '$http_origin $remote_addr - $remote_user [$time_local] "$request" '
    '$status $body_bytes_sent "$http_referer" '
    '"$http_user_agent" "$http_x_forwarded_for"';

    access_log  /var/log/nginx/access.log  main;
    error_log /var/log/nginx/error.log;

    ##
    # Gzip Settings
    ##

    gzip on;
    gzip_disable "msie6";

    gzip_vary on;
    gzip_proxied any;
    gzip_comp_level 5;
    gzip_min_length 256;
    # gzip_buffers 16 8k;
    # gzip_http_version 1.1;
    gzip_types application/atom+xml application/javascript application/json application/ld+json application/manifest+json application/rdf+xml application/rss+xml application/schema+json application/vnd.geo+json application/vnd.ms-fontobject application/x-font-ttf application/x-javascript application/x-web-app-manifest+json application/xhtml+xml application/xml font/eot font/opentype image/bmp image/svg+xml image/vnd.microsoft.icon image/x-icon text/cache-manifest text/css text/javascript text/plain text/vcard text/vnd.rim.location.xloc text/vtt text/x-component text/x-cross-domain-policy text/xml;

    index index.php index.htm index.html;

    ##
    # Virtual Host Configs
    ##
    map $http_upgrade $proxy_connection_upgrade {
        default upgrade;
        ""      close;
    }

    ##
    # myhh specific
    ##
    map $sent_http_content_type $expires {
        "text/html"                 epoch;
        "text/html;
        charset=utf-8"  epoch;
        default                     off;
    }

    map $http_upgrade $type {
        default "nuxt";
        websocket "ws";
    }

    server {
        listen 80;
        server_name localhost;

        root /var/www/laravel/public;

        #location / {
        #    try_files /dev/null @$type;
        #}

        location / {
            try_files /dev/null @laravel;
        }

        # laravel config
        location /graphql {
            try_files /dev/null @laravel;
        }

        location /api {
            try_files /dev/null @laravel;
        }

        location /sanctum {
            try_files /dev/null @laravel;
        }

        location /vendor {
            try_files /dev/null @laravel;
        }

        location /telescope {
            try_files /dev/null @laravel;
        }

        location /horizon {
            try_files /dev/null @laravel;
        }

        location /laravel-websockets {
            try_files /dev/null @laravel;
        }

        location /storage {
            alias /var/www/laravel/storage/app/public;
            try_files $uri $uri/ =404;
        }

        # named locations
        location @nuxt {
            expires $expires;

            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection 'upgrade';
            proxy_set_header Host $http_host;

            proxy_cache_bypass $http_upgrade;

            proxy_set_header X-Request-Scheme $scheme;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto https;
            proxy_pass http://host.docker.internal:9762;
        }

        location @laravel {
            try_files $uri $uri/ /index.php?$query_string;
        }

        #location @ws {
        #    proxy_pass             http://php-ws:6001;
        #    proxy_read_timeout     60;
        #    proxy_connect_timeout  60;
        #    proxy_redirect         off;

            # Allow the use of websockets
        #    proxy_http_version 1.1;
        #    proxy_set_header Upgrade $http_upgrade;
        #    proxy_set_header Connection 'upgrade';
        #    proxy_set_header Host $host;
        #    proxy_cache_bypass $http_upgrade;
        #}

        location ~ \.php$ {
            fastcgi_split_path_info ^(.+\.php)(/.+)$;

            fastcgi_pass php-fpm:9000;
            fastcgi_index index.php;
            include fastcgi_params;
            fastcgi_param  SCRIPT_FILENAME    $realpath_root$fastcgi_script_name;
            fastcgi_param  PATH_INFO    $fastcgi_path_info;
        }
    }
}
